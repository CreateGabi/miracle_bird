<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="feed">

	<!-- 피드 삽입 -->
	<insert id="create" parameterType="feedVO">
		insert into feed values (#{feedId}, #{userId}, #{mediaType}, #{mediaUrl}, #{username}, #{caption}, #{feedTime});
	</insert>
	
	<!-- feed_id로 피드 조회(중복된 피드 조회) -->
	<select id="selectFeedByFeedId" parameterType="feedVO" resultType="feedVO">
		select feed_id from feed where feed_id = #{feedId};
	</select>
	
	<!-- user_id로 모든 피드 조회 -->
	<select id="allFeedByUserId" parameterType="profileVO" resultType="feedVO">
		select * from feed where user_id = #{userId} order by feed_time desc;
	</select>
	
	<select id="countFeedByUserId" parameterType="Long" resultType="int">
		select count(*) as feed_cnt from feed where user_id = #{userId};
	</select>
	
	<select id="allFeedTimeByUserId" parameterType="profileVO" resultType="feedJsonVO">
		select feed_time, count(*) as count from feed where user_id = #{userId} group by feed_time;
	</select>
	
	<!-- party_id로 파티원들의 피드 조회 -->
	<select id="findPartyMemberFeed" parameterType="partyFeedPagingVO" resultType="partyFeedVO">
		select *
		from (
			select row_number() over(order by f.feed_time desc) as row_num, pmf.*
			from (
				select f.*
				from feed as f
				join party_member as pm
				on f.user_id = pm.user_id
				where f.feed_time >= '2023-01-10'
				and pm.party_id = 1
			) as pmf
		) as pmf2 where pmf2.row_num between 1 and 3;
	</select>
	
	<!-- 파티원들의 피드 전체 수 조회 -->
	<select id="getPartyMemberFeedCount" parameterType="partyFeedPagingVO" resultType="Integer">
		select count(*)
		from (select f.*
			from feed as f
			join party_member as pm
			on f.user_id = pm.user_id
			where pm.party_id = #{partyId}
			and f.feed_time >= #{today}) as pmf;
	</select>
	
</mapper>